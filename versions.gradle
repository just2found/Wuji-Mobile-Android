ext.deps = [:]

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.compile_sdk = 28
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def versions = [:]
versions.activity = '1.2.3'
versions.multidex = "2.0.1"
versions.android_gradle_plugin = '3.6.3'
versions.apache_commons = "2.5"
versions.appcompat = "1.3.0"
versions.arch_core = "2.0.1"
versions.atsl_core = "1.2.0"
versions.atsl_junit = "1.1.1"
versions.atsl_rules = "1.2.0"
versions.atsl_runner = "1.2.0"
versions.benchmark = "1.0.0"
versions.core = '1.5.0'
versions.core_ktx = "1.5.0"
versions.dagger = "2.28.3"
versions.dexmaker = "2.2.0"
versions.espresso = "3.2.0"
versions.fragment = "1.3.3"
versions.security = "1.0.0"
versions.swiperefreshlayout = '1.1.0'
versions.recyclerview = "1.2.1"
versions.preference = "1.1.0"
versions.slice_builders = "1.0.0"
versions.cardview = "1.0.0"
versions.material = "1.2.1"
versions.constraintlayout = "2.0.3"
versions.viewPager2 = "1.0.0"
versions.glide = "4.12.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.3.72"
versions.kotlin_coroutines_android = "1.3.8"
versions.lifecycle = "2.2.0"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.12.13"
versions.navigation = "2.3.3"
versions.okhttp3 = "3.12.13"
versions.paging = "2.1.2"
versions.retrofit = "2.9.0"
versions.retrofit2_kotlin = "0.9.2"
versions.robolectric = "4.2"
versions.room = "2.1.0"
versions.rx_android = "2.1.1"
versions.rxjava2 = "2.2.14"
versions.rxkotlin = "2.4.0"
versions.rxlifecycle = "3.1.0"
versions.rxlife = "2.0.0"
versions.eventbus = "3.1.1"
versions.support = "1.1.0"
versions.annotations = "1.1.0"
versions.vectordrawable = '1.1.0'
versions.exifinterface = '1.2.0'
versions.timber = "4.7.1"
versions.work = "2.3.4"
versions.gson = "2.8.6"
versions.arouterApiVersion = "1.5.0"
versions.arouterCompilerVersion = "1.2.2"
versions.arouterannotationVersion = "1.0.6"
versions.grpc = "1.29.0"
versions.protobuf = "3.11.0"
versions.leakcanary = '1.6.3'
versions.objectboxVersion = '2.5.1'
versions.butterknife = '10.2.1'
versions.exoplayer = '2.13.3'
ext.versions = versions

def deps = [:]
deps.benchmark = "androidx.benchmark:benchmark-junit4:$versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.annotations"
support.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
support.recyclerview_selection = "androidx.recyclerview:recyclerview-selection:$versions.recyclerview"
support.design = "com.google.android.material:material:$versions.material"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core = "androidx.core:core:$versions.core"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
support.security_crypto = "androidx.security:security-crypto:${versions.security}"
support.swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:${versions.swiperefreshlayout}"
support.constraint_layout = "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
support.cardview = "androidx.cardview:cardview:${versions.cardview}"
support.multidex = "androidx.multidex:multidex:${versions.multidex}"
support.localbroadcastmanager = 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
support.documentfile = 'androidx.documentfile:documentfile:1.0.1'
support.leanback = 'androidx.leanback:leanback:1.0.0'
support.viewpager2 = "androidx.viewpager2:viewpager2:${versions.viewPager2}"
support.media = 'androidx.media:media:1.1.0'
support.transition_ktx = 'androidx.transition:transition:1.3.1'
support.exifinterface = "androidx.exifinterface:exifinterface:$versions.exifinterface"
support.vectordrawable_animated = "androidx.vectordrawable:vectordrawable-animated:$versions.vectordrawable"
support.preference_ktx = 'androidx.preference:preference-ktx:1.1.1'
support.palette_ktx = 'androidx.palette:palette-ktx:1.0.0'
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.service = "androidx.lifecycle:lifecycle-service:${versions.lifecycle}"
lifecycle.process = "androidx.lifecycle:lifecycle-process:${versions.lifecycle}"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.viewmodel_savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
deps.lifecycle = lifecycle

def activity = [:]
activity.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"
deps.activity = activity

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.paging_rx2 = "androidx.paging:paging-rxjava2:$versions.paging"

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.core = "androidx.test:core:$versions.atsl_core"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_rules"
deps.atsl = atsl

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.rxjava2 = "androidx.work:work-rxjava2:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation


//https://square.github.io/retrofit/#license Licensed under the Apache License, Version 2.0 (the "License");
def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.kotlin = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${versions["retrofit2_kotlin"]}"
deps.retrofit = retrofit
//https://github.com/google/dagger/blob/master/LICENSE.txt  Licensed under the Apache License, Version 2.0 (the "License");
def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger


// https://github.com/mockito/mockito/blob/release/3.x/LICENSE The MIT License
def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito
//https://github.com/JetBrains/kotlin/blob/master/license/README.md
def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines_android"
kotlin.coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines_android"

deps.kotlin = kotlin

//https://github.com/bumptech/glide/blob/master/LICENSE
def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.gifdecoder = "com.github.bumptech.glide:gifdecoder:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.okhttp3_integration = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
deps.glide = glide

//https://github.com/linkedin/dexmaker/blob/master/LICENSE Licensed under the Apache License, Version 2.0 (the "License");
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"

deps.junit = "junit:junit:$versions.junit"

//https://square.github.io/okhttp/#license Licensed under the Apache License, Version 2.0 (the "License");
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.okhttp3 = "com.squareup.okhttp3:okhttp:$versions.okhttp3"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp3}"

//https://github.com/JakeWharton/butterknife/blob/master/LICENSE.txt Licensed under the Apache License, Version 2.0 (the "License");
deps.butterknife = "com.jakewharton:butterknife:$versions.butterknife"
deps.butterknife_compiler = "com.jakewharton:butterknife-compiler:$versions.butterknife"
deps.butterknife_plugin = "com.jakewharton:butterknife-gradle-plugin:$versions.butterknife"
//https://github.com/JakeWharton/DiskLruCache/blob/master/LICENSE.txt Licensed under the Apache License, Version 2.0 (the "License");
deps.disklrucache = 'com.jakewharton:disklrucache:2.0.2'
//https://github.com/JakeWharton/timber/blob/master/LICENSE.txt Licensed under the Apache License, Version 2.0 (the "License");
deps.timber = "com.jakewharton.timber:timber:$versions.timber"

//https://github.com/ReactiveX/RxJava/blob/2.x/LICENSE Licensed under the Apache License, Version 2.0 (the "License");
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
//https://github.com/ReactiveX/RxAndroid/blob/3.x/LICENSE Licensed under the Apache License, Version 2.0 (the "License");
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
//https://github.com/ReactiveX/RxKotlin/blob/3.x/LICENSE Licensed under the Apache License, Version 2.0 (the "License");
deps.rxkotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
//https://github.com/trello/RxLifecycle/blob/master/LICENSE Licensed under the Apache License, Version 2.0 (the "License");
deps.rxlifecycle = "com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:$versions.rxlifecycle"
deps.rxlifecycle_ktx = "com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:$versions.rxlifecycle"
//https://github.com/liujingxing/rxjava-RxLife/blob/master/LICENSE Licensed under the Apache License, Version 2.0 (the "License");
deps.rxlife = "com.rxjava.rxlife:rxlife:$versions.rxlife"

deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"

//https://github.com/square/leakcanary#license
deps.leakcanary_android_debug = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
deps.leakcanary_android_release = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"


//https://github.com/greenrobot/EventBus/blob/master/LICENSE Licensed under the Apache License, Version 2.0 (the "License");
deps.eventbus = "org.greenrobot:eventbus:$versions.eventbus"
//https://github.com/objectbox/objectbox-java/blob/main/LICENSE.txt Licensed under the Apache License, Version 2.0 (the "License");
deps.objectbox_android_debug = "io.objectbox:objectbox-android-objectbrowser:$versions.objectboxVersion"
deps.objectbox_android_release = "io.objectbox:objectbox-android:$versions.objectboxVersion"
deps.objectbox_processor = "io.objectbox:objectbox-processor:$versions.objectboxVersion"
deps.objectbox_rxjava = "io.objectbox:objectbox-rxjava:$versions.objectboxVersion"
deps.objectbox_kotlin = "io.objectbox:objectbox-kotlin:$versions.objectboxVersion"
deps.objectbox_plugin = "io.objectbox:objectbox-gradle-plugin:$versions.objectboxVersion"
// Optional -- manually add native ObjectBox library to override auto-detection
deps.objectbox_test_linux = "io.objectbox:objectbox-linux:$versions.objectboxVersion"
deps.objectbox_test_macos = "io.objectbox:objectbox-macos:$versions.objectboxVersion"
deps.objectbox_test_windows = "io.objectbox:objectbox-windows:$versions.objectboxVersion"
//objectbox
ext.deps = deps


//https://github.com/alibaba/ARouter/blob/master/LICENSE
def arouter = [:]
//路由
arouter.api = "com.alibaba:arouter-api:${versions["arouterApiVersion"]}"
arouter.compiler = "com.alibaba:arouter-compiler:${versions["arouterCompilerVersion"]}"
arouter.annotation = "com.alibaba:arouter-annotation:${versions["arouterannotationVersion"]}"
deps.arouter = arouter


def loading = [:]
//https://github.com/leandroBorgesFerreira/LoadingButtonAndroid/blob/master/LICENSE
loading.button = "br.com.simplepass:loading-button-android:2.2.0"
deps.loading = loading
//https://github.com/scwang90/SmartRefreshLayout/blob/master/LICENSE
deps.SmartRefresh = "com.scwang.smartrefresh:SmartRefreshLayout:1.1.0"
//https://github.com/google/gson/blob/master/LICENSE
deps.gson = "com.google.code.gson:gson:$versions.gson"
//https://github.com/bingoogolapple/BGAQRCode-Android#license
deps.qrcode = "cn.bingoogolapple:bga-qrcode-zxing:1.3.7"
//https://github.com/zxing/zxing/blob/master/LICENSE
deps.zxing = "com.google.zxing:core:3.3.3"
//view
//https://github.com/google/flexbox-layout/blob/master/LICENSE
deps.flexbox = 'com.google.android:flexbox:2.0.1'
//https://github.com/chrisbanes/PhotoView#license
deps.PhotoView = 'com.github.chrisbanes:PhotoView:2.3.0'
//https://github.com/qstumn/BadgeView/blob/master/LICENSE   Apache License
deps.badgeview = 'q.rorbin:badgeview:1.1.3'

//https://github.com/iielse/imageviewer MIT License
deps.imageviewer = 'com.github.iielse:imageviewer:1.1.5'

//https://github.com/Bigkoo/Android-PickerView Licensed under the Apache License, Version 2.0 (the "License");
deps.picker_view = 'com.contrarywind:Android-PickerView:4.1.9'

//https://github.com/CymChad/BaseRecyclerViewAdapterHelper#LICENSE MIT License
deps.brvah = 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'
//图表
deps.MPAndroidChart = 'com.github.PhilJay:MPAndroidChart:v2.1.6'
//https://github.com/rubensousa/Decorator#license
deps.rv_decorator = 'io.cabriole:decorator:1.2.0'
//https://github.com/hbb20/CountryCodePickerProject#license
deps.ccp = "com.hbb20:ccp:2.4.7"
//https://github.com/davemorrissey/subsampling-scale-image-view/blob/master/LICENSE
deps.subsampling_scale_image_view = "com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0"
//https://github.com/FutureMind/recycler-fast-scroll#license
deps.fastscroll= "com.futuremind.recyclerfastscroll:fastscroll:0.2.5"

//https://github.com/joker-fu/EasyPhotos
deps.EasyPhotos = "com.joker.HuanTanSheng:EasyPhotos:andX-2.5.6"

//https://github.com/li-xiaojun/XPopup/
deps.xpopup = "com.lxj:xpopup:1.9.3"

//https://github.com/grpc/grpc/blob/master/LICENSE
def grpc = [:]
grpc.okhttp = "io.grpc:grpc-okhttp:$versions.grpc"
grpc.proto = "io.grpc:grpc-protobuf-lite:$versions.grpc"
grpc.stub = "io.grpc:grpc-stub:$versions.grpc"
deps.grpc = grpc

//https://github.com/protocolbuffers/protobuf/blob/master/LICENSE
def protobuf = [:]
protobuf.java = "com.google.protobuf:protobuf-java:$versions.protobuf"
protobuf.c = "com.google.protobuf:protoc:$versions.protobuf"
protobuf.cgenjavalite = "com.google.protobuf:protoc-gen-javalite:$versions.protobuf"
protobuf.javalite = "com.google.protobuf:protobuf-javalite:$versions.protobuf"
deps.protobuf = protobuf

//https://github.com/google/protobuf-gradle-plugin/blob/master/LICENSE


//https://github.com/KeepSafe/ReLinker#LICENSE
deps.relinker = 'com.getkeepsafe.relinker:relinker:1.3.1'

deps.exoplayer = "com.google.android.exoplayer:exoplayer:$versions.exoplayer"
deps.exoplayerCore = "com.google.android.exoplayer:exoplayer-core:$versions.exoplayer"
deps.exoplayerUI = "com.google.android.exoplayer:exoplayer-ui:$versions.exoplayer"
deps.exoplayerExtOKHttp = "com.google.android.exoplayer:extension-okhttp:$versions.exoplayer"
deps.exoplayerExtRtmp = "com.google.android.exoplayer:extension-rtmp:$versions.exoplayer"
deps.exoplayerExtGvr = "com.google.android.exoplayer:extension-gvr:$versions.exoplayer"
deps.exoplayerExtCronet = "com.google.android.exoplayer:extension-cronet:$versions.exoplayer"

deps.flexbox = "com.google.android:flexbox:2.0.1"

ext.deps = deps
//https://github.com/google/ExoPlayer/blob/release-v2/LICENSE


def addRepos(RepositoryHandler handler) {
//    handler.google()
    handler.maven { url 'https://dl.google.com/dl/android/maven2/' }
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.mavenCentral()
    handler.maven { url "https://jitpack.io" }
    // PhotoView for Zoom ImageView
    handler.maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

ext.addRepos = this.&addRepos